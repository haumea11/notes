* TeX
** Built-in commands
*** TeX Editing
C-c C-o
    Insert ‘\begin’ and ‘\end’ for LaTeX block and position point on a
    line between them (tex-latex-block).

C-c C-e
    Close the innermost LaTeX block not yet closed
    (tex-close-latex-block).

"
    Insert, according to context, either ‘``’ or ‘"’ or ‘''’
    (tex-insert-quote).

C-j
    Insert a paragraph break (two newlines) and check the previous
    paragraph for unbalanced braces or dollar signs
    (tex-terminate-paragraph).

M-x tex-validate-region
    Check each paragraph in the region for unbalanced braces or dollar
    signs.

C-c {
    Insert ‘{}’ and position point between them (tex-insert-braces). 

C-c }
    Move forward past the next unmatched close brace (up-list). 

*** TeX Printing
C-c C-b
    Invoke TeX on the entire current buffer (tex-buffer).

C-c C-r
    Invoke TeX on the current region, together with the buffer’s
    header (tex-region).

C-c C-f
    Invoke TeX on the current file (tex-file).

C-c C-v
    Preview the output from the last C-c C-r, C-c C-b, or C-c C-f
    command (tex-view).

C-c C-p
    Print the output from the last C-c C-b, C-c C-r, or C-c C-f
    command (tex-print).

C-c TAB
    Invoke BibTeX on the current file (tex-bibtex-file). 

C-c C-l
    Recenter the window showing output from TeX so that the last line
    can be seen (tex-recenter-output-buffer).

C-c C-k
    Kill the TeX subprocess (tex-kill-job). 

C-c C-c
    Invoke some other compilation command on the entire current buffer
    (tex-compile).

** AUCTeX-specific commands
* Org
** General Notes
*** On embedded LaTeX
The following snippets will be identified as LaTeX source code:

    Environments of any kind1. The only requirement is that the \begin
    statement appears on a new line, at the beginning of the line or
    after whitespaces only.  Text within the usual LaTeX math
    delimiters. To avoid conflicts with currency specifications,
    single ‘$’ characters are only recognized as math delimiters if
    the enclosed text contains at most two line breaks, is directly
    attached to the ‘$’ characters with no whitespace in between, and
    if the closing ‘$’ is followed by whitespace or punctuation
    (parentheses and quotes are considered to be punctuation in this
    context). For the other delimiters, there is no such restriction,
    so when in doubt, use ‘\(...\)’ as inline math delimiters.
** Commands
*** General
C-c a
    Agenda command

*** In an org document
M-<RET>     (org-insert-heading)

    Insert a new heading/item with the same level as the one at point.

    If the cursor is in a plain list item, a new item is created (see
    Plain lists). To prevent this behavior in lists, call the command
    with one prefix argument. When this command is used in the middle
    of a line, the line is split and the rest of the line becomes the
    new item or headline. If you do not want the line to be split,
    customize org-M-RET-may-split-line.

    If the command is used at the beginning of a line, and if there is
    a heading or an item at point, the new heading/item is created
    before the current line. If the command is used at the end of a
    folded subtree (i.e., behind the ellipses at the end of a
    headline), then a headline will be inserted after the end of the
    subtree.

    Calling this command with C-u C-u will unconditionally respect the
    headline's content and create a new item at the end of the parent
    subtree.

    If point is at the beginning of a normal line, turn this line into
    a heading.

C-<RET>     (org-insert-heading-respect-content)

    Just like M-<RET>, except when adding a new heading below the
    current heading, the new heading is placed after the body instead
    of before it. This command works from anywhere in the entry.

M-S-<RET>     (org-insert-todo-heading)

    Insert new TODO entry with same level as current heading. See also
    the variable org-treat-insert-todo-heading-as-state-change.

C-S-<RET>     (org-insert-todo-heading-respect-content)

    Insert new TODO entry with same level as current heading. Like
    C-<RET>, the new headline will be inserted after the current
    subtree.

<TAB>     (org-cycle)

    In a new entry with no text yet, the first <TAB> demotes the entry to become a child of the previous one. The next <TAB> makes it a parent, and so on, all the way to top level. Yet another <TAB>, and you are back to the initial level.
M-<left>     (org-do-promote)
    Promote current heading by one level.
M-<right>     (org-do-demote)
    Demote current heading by one level.
M-S-<left>     (org-promote-subtree)
    Promote the current subtree by one level.
M-S-<right>     (org-demote-subtree)
    Demote the current subtree by one level.
M-S-<up>     (org-move-subtree-up)
    Move subtree up (swap with previous subtree of same level).
M-S-<down>     (org-move-subtree-down)
    Move subtree down (swap with next subtree of same level).
M-h     (org-mark-element)
    Mark the element at point. Hitting repeatedly will mark subsequent elements of the one just marked. E.g., hitting <M-h> on a paragraph will mark it, hitting <M-h> immediately again will mark the next one.
C-c @     (org-mark-subtree)
    Mark the subtree at point. Hitting repeatedly will mark subsequent subtrees of the same level than the marked subtree.
C-c C-x C-w     (org-cut-subtree)
    Kill subtree, i.e., remove it from buffer but save in kill ring. With a numeric prefix argument N, kill N sequential subtrees.
C-c C-x M-w     (org-copy-subtree)
    Copy subtree to kill ring. With a numeric prefix argument N, copy the N sequential subtrees.
C-c C-x C-y     (org-paste-subtree)
    Yank subtree from kill ring. This does modify the level of the subtree to make sure the tree fits in nicely at the yank position. The yank level can also be specified with a numeric prefix argument, or by yanking after a headline marker like ‘****’.
C-y     (org-yank)
    Depending on the options org-yank-adjusted-subtrees and org-yank-folded-subtrees, Org's internal yank command will paste subtrees folded and in a clever way, using the same command as C-c C-x C-y. With the default settings, no level adjustment will take place, but the yanked tree will be folded unless doing so would swallow text previously visible. Any prefix argument to this command will force a normal yank to be executed, with the prefix passed along. A good way to force a normal yank is C-u C-y. If you use yank-pop after a yank, it will yank previous kill items plainly, without adjustment and folding.
C-c C-x c     (org-clone-subtree-with-time-shift)
    Clone a subtree by making a number of sibling copies of it. You will be prompted for the number of copies to make, and you can also specify if any timestamps in the entry should be shifted. This can be useful, for example, to create a number of tasks related to a series of lectures to prepare. For more details, see the docstring of the command org-clone-subtree-with-time-shift.
C-c C-w     (org-refile)
    Refile entry or region to a different location. See Refile and copy.
C-c ^     (org-sort)
    Sort same-level entries. When there is an active region, all entries in the region will be sorted. Otherwise the children of the current headline are sorted. The command prompts for the sorting method, which can be alphabetically, numerically, by time (first timestamp with active preferred, creation time, scheduled time, deadline time), by priority, by TODO keyword (in the sequence the keywords have been defined in the setup) or by the value of a property. Reverse sorting is possible as well. You can also supply your own function to extract the sorting key. With a C-u prefix, sorting will be case-sensitive.
C-x n s     (org-narrow-to-subtree)
    Narrow buffer to current subtree.
C-x n b     (org-narrow-to-block)
    Narrow buffer to current block. 

*** In the agenda
v t
    Switch to fortnight view

v m 
    Switch to month view

** Examples
*** Beamer Export Example
     #+TITLE: Example Presentation
     #+AUTHOR: Carsten Dominik
     #+OPTIONS: H:2 toc:t num:t
     #+LATEX_CLASS: beamer
     #+LATEX_CLASS_OPTIONS: [presentation]
     #+BEAMER_THEME: Madrid
     #+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)
     
     * This is the first structural section
     
     ** Frame 1
     *** Thanks to Eric Fraga                                           :B_block:
         :PROPERTIES:
         :BEAMER_COL: 0.48
         :BEAMER_ENV: block
         :END:
         for the first viable Beamer setup in Org
     *** Thanks to everyone else                                        :B_block:
         :PROPERTIES:
         :BEAMER_COL: 0.48
         :BEAMER_ACT: <2->
         :BEAMER_ENV: block
         :END:
         for contributing to the discussion
     **** This will be formatted as a beamer note                       :B_note:
          :PROPERTIES:
          :BEAMER_env: note
          :END:
     ** Frame 2 (where we will not use columns)
     *** Request
         Please test this stuff!
